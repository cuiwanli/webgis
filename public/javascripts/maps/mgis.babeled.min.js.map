{"version":3,"sources":["mgis.babeled.js"],"names":["showImg","ele","console","log","$","data","img","src","attr","class","append","Intense","trigger","document","ready","dropdown","require","Map","MapView","SceneView","GraphicsLayer","Polyline","SimpleLineSymbol","Graphic","Popup","PopupTemplate","MarianaGis","initGis","options","this","baseType","viewType","viewContainer","view","map","basemap","container","scale","center","zoom","then","on","evt","graphic","myGis","highLightGraphic","_","forEach","graphicsLayers","graphicsLayer","layerId","add","addNewGraphic","polyline","path","slice","lineSymbol","color","width","newContent","substring","lastIndexOf","polylineGraphic","id","title","name","geometry","symbol","popupTemplate","content","text","click","animateTo","graphics","unHighLightAll","highLightedGraphics","index","remove","originId","highLightedGraphic","push","getData","url","show","get","datas","hide","length","loadMoreGraphics","chunkIndex","addContentToList","contents","loadAllGraphics","loadMore","initGraphics","initUrl","initLayer","layer","newLayer","newColor","getNextColor","rgb","newBtn","data-layerid","data-color","btn","hasClass","removeClass","addClass","colors","hex","nextI","mGis","layers","change","val","switchClass","find"],"mappings":"AA4WA,QAASA,SAAQC,GACbC,QAAQC,IAAIC,EAAEH,GAAKI,KAAK,OACxB,IACIC,GADAC,EAAMH,EAAEH,GAAKI,KAAK,MAElBD,GAAE,aAAeG,EAAM,MAAM,GAC7BD,EAAMF,EAAE,aAAeG,EAAM,MAAM,IAEnCD,EAAMF,EAAE,SAASI,MACbD,IAAOA,EACPE,QAAS,aAEbL,EAAE,WAAWM,OAAOJ,GACpBK,QAAQL,IAEZA,EAAIM,QAAQ,SA1XhBR,EAAES,UAAUC,MAAM,WACdV,EAAE,gBAAgBW,aAItBC,SACI,WACA,qBACA,uBACA,4BACA,yBACA,gCACA,eACA,qBACA,qBACA,kBACD,SAASC,EACRC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACA,QAASC,KAuBL,QAASC,GAAQC,GAETA,IACAC,KAAKD,QAAUA,EACfC,KAAKC,SAAWF,EAAQE,UAAYD,KAAKC,SACzCD,KAAKE,SAAWH,EAAQG,UAAYF,KAAKE,SACzCF,KAAKG,cAAgBJ,EAAQI,eAAiBH,KAAKG,cAEvD,IAAIC,EAEJJ,MAAKK,IAAM,GAAIjB,IACXkB,QAASN,KAAKC,WAKdG,EADiB,MAAjBJ,KAAKE,SACE,GAAIZ,IACPiB,UAAWP,KAAKG,cAChBE,IAAKL,KAAKK,IACVG,MAAO,IACPC,QAAS,IAAK,GAAI,KAOf,GAAIpB,IACPkB,UAAWP,KAAKG,cAChBE,IAAKL,KAAKK,IACVK,KAAM,EACND,QAAS,IAAK,MAGtBL,EAAKO,KAAK,WACNP,EAAKQ,GAAG,QAAS,SAASC,GAClBA,EAAIC,SACJC,EAAMC,iBAAiBH,EAAIC,aAKvCG,EAAEC,QAAQlB,KAAKmB,eAAgB,SAASC,EAAeC,GACnDN,EAAMV,IAAIiB,IAAIF,KAElBpB,KAAKI,KAAOA,EAGhB,QAASmB,GAAcF,EAAS7C,GAC5B,GAAI4C,GAAgBpB,KAAKmB,eAAeE,GACpCG,EAAW,GAAIhC,GAAShB,EAAKiD,KACV,QAAnBV,EAAMb,WAAmBsB,EAAW,GAAIhC,GAASyB,EAAES,MAAMlD,EAAKiD,KAAM,EAAG,IAC3E,IAAIE,GAAa,GAAIlC,IACjBmC,MAAOR,EAAcQ,MACrBC,MAAO,IAGPC,EAAa,mBAAqBtD,EAAKiD,KAAK,GAAG,GAAK,QAAUjD,EAAKiD,KAAK,GAAG,GAAK,QAAUjD,EAAKiD,KAAK,GAAG,GAAK,uBACzFjD,EAAKiD,KAAK,GAAG,GAAK,QAAUjD,EAAKiD,KAAK,GAAG,GAAK,QAAUjD,EAAKiD,KAAK,GAAG,GAAK,mCAC9DjD,EAAKC,IAAIsD,UAAU,EAAGvD,EAAKC,IAAIuD,YAAY,MAAQ,yCAAgDxD,EAAKC,IAAM,sCAChID,EAAKC,IAAM,aAAeD,EAAKC,IAAIsD,UAAUvD,EAAKC,IAAIuD,YAAY,MAAQ,yDACvFC,EAAkB,GAAIvC,IACtBwC,GAAI1D,EAAK0D,GACTb,QAASA,EACTc,MAAO3D,EAAK4D,KACZC,SAAUb,EACVc,OAAQX,EACRY,cAAe,GAAI3C,IACfuC,MAAO3D,EAAK4D,KACZI,QAASV,KAGjBvD,GAAE,cAAcM,OAAON,EAAE,SAASI,KAAK,QAAS,aAAaE,OAAON,EAAE,QAAQI,KAAK,QAAS,kBAAkB8D,KAAKjE,EAAK4D,MAAMM,MAAM,WAChI3B,EAAMX,KAAKuC,UAAUV,GACrBlB,EAAMC,iBAAiBiB,MACvBpD,OAAOiD,IACX9B,KAAK4C,SAASpE,EAAK0D,IAAMD,EAEzBb,EAAcE,IAAIW,GAKtB,QAASY,KACL,GAAIC,GAAsB9C,KAAK8C,mBAC/B7B,GAAEC,QAAQ4B,EAAqB,SAAShC,EAASiC,GAC7ChC,EAAMI,eAAeL,EAAQO,SAAS2B,OAAOlC,GAC7CC,EAAMI,eAAeL,EAAQO,SAASC,IAAIP,EAAM6B,SAAS9B,EAAQmC,aAErEjD,KAAK8C,uBAGT,QAAS9B,GAAiBF,GACtB,IAAKA,EAAQmC,SAAU,CACnBjD,KAAK6C,gBACL,IAAIlB,GAAa,GAAIlC,IACjBmC,OAAQ,IAAK,EAAG,GAChBC,MAAO,IAEPqB,EAAqB,GAAIxD,IACzBwC,GAAIpB,EAAQoB,GAAK,KACjBe,SAAUnC,EAAQoB,GAClBb,QAASP,EAAQO,QACjBc,MAAOrB,EAAQqB,MACfE,SAAUvB,EAAQuB,SAClBC,OAAQX,EACRY,cAAezB,EAAQyB,eAE3BvC,MAAKmB,eAAeL,EAAQO,SAAS2B,OAAOlC,GAC5Cd,KAAKmB,eAAeL,EAAQO,SAASC,IAAI4B,GACzClD,KAAK8C,oBAAoBK,KAAKD,GAC9B7E,QAAQC,IAAI,gBAIpB,QAAS8E,GAAQC,EAAKhC,GAElB,MADA9C,GAAE,kBAAkB+E,OACb/E,EAAEgF,IAAIF,GAAK1C,KAAK,SAAS6C,GAM5B,MALAjF,GAAE,kBAAkBkF,OACpBxC,EAAEC,QAAQsC,EAAO,SAAShF,EAAMuE,GAC5BhC,EAAMQ,cAAcF,EAAS7C,KAEjCH,QAAQC,IAAI,kBAAoBkF,EAAME,QAC/BF,EAAME,OAAS,IAI9B,QAASC,GAAiBtC,GACtB,MAAO,YACH,GAAIgC,GAAM,yBAA2BhC,EAAU,eAAiBrB,KAAK4D,WAAWvC,EAEhF,OADArB,MAAK4D,WAAWvC,KACTrB,KAAKoD,QAAQC,EAAKhC,IAIjC,QAASwC,GAAiBC,GACtB7C,EAAEC,QAAQ4C,EAAU,SAAStB,EAASO,GAClCxE,EAAE,cAAcM,OAAON,EAAE,SAASI,KAAK,QAAS,aAAaE,OAAON,EAAE,QAAQI,KAAK,QAAS,kBAAkB8D,KAAKjE,KAAK4D,MAAMM,MAAM,WAChI3B,EAAMX,KAAKuC,UAAUV,oBACrBpD,OAAOiD,eAInB,QAASiC,GAAgB1C,GAGrB,QAAS2C,KACLzF,EAAE,kBAAkB+E,OACpB/E,EAAEgF,IAAIF,EAAK,SAASG,GAChBjF,EAAE,kBAAkBkF,OACpBxC,EAAEC,QAAQsC,EAAO,SAAShF,EAAMuE,GAC5BhC,EAAMQ,cAAcF,EAAS7C,KAEjCH,QAAQC,IAAI,kBAAoBkF,EAAME,QAClCF,EAAME,OAAS,IACf3C,EAAM6C,WAAWvC,KACjBgC,EAAM,yBAA2BhC,EAAU,eAAiBN,EAAM6C,WAAWvC,GAC7E2C,OAbZ,GAAIX,GAAM,yBAA2BhC,EAAU,eAAiBN,EAAM6C,WAAWvC,EAiBjF2C,KAGJ,QAASC,GAAa5C,GAClB,GAAI6C,GAAU,yBAA2B7C,EAAU,eACnDrB,MAAKoD,QAAQc,EAAS7C,GACtBrB,KAAK4D,WAAWvC,GAAW,EACrBrB,KAAKD,QAAQgE,mBAAoB,IACnC1F,QAAQC,IAAI,yBACZ0B,KAAK+D,gBAAgB1C,IAgE7B,QAAS8C,GAAUC,GACf,GAAIC,GAAW,GAAI9E,GAAc6E,GAC7BE,EAAWtE,KAAKuE,cACpBF,GAASzC,MAAQ0C,EAASE,GAC1B,IAAIC,GAASlG,EAAE,YAAYI,MACvBC,QAAS,6BAA+B0F,EAASlC,KACjDsC,eAAgBN,EAAMlC,GACtByC,aAAcL,EAASlC,OACxBK,KAAK2B,EAAMlC,GACduC,GAAO/B,MAAM,WACT,GAAIkC,GAAMrG,EAAEyB,KACR4E,GAAIC,SAASD,EAAIpG,KAAK,WACtBuC,EAAMV,IAAI2C,OAAOjC,EAAMI,eAAeyD,EAAIpG,KAAK,aAC/CoG,EAAIE,YAAYF,EAAIpG,KAAK,YAMzBuC,EAAMV,IAAIiB,IAAIP,EAAMI,eAAeyD,EAAIpG,KAAK,aAC5CoG,EAAIG,SAASH,EAAIpG,KAAK,aAO9BD,EAAE,kBAAkBM,OAAO4F,GAC3BzE,KAAKmB,eAAeiD,EAAMlC,IAAMmC,EAChCrE,KAAKK,IAAIiB,IAAI+C,GACbhG,QAAQC,IAAI,UAAY8F,EAAMlC,GAAK,eACnClC,KAAKiE,aAAaG,EAAMlC,IA/R5B,GAAInB,IACAd,SAAU,SACVC,SAAU,KACVC,cAAe,UACfgB,kBACAyB,YACAkB,YACAF,cACA7D,WACA+C,uBACAhD,QAASA,EACTyB,cAAeA,EACf6B,QAASA,EACTO,iBAAkBA,EAClBE,iBAAkBA,EAClBE,gBAAiBA,EACjBE,aAAcA,EACdE,UAAWA,EACXnD,iBAAkBA,EAClB6B,eAAgBA,EA8QpB,OA9FA9B,GAAMwD,aAAe,WACjB,GAAIS,KACA5C,KAAM,MACNoC,IAAK,iBACLS,IAAK,YAEL7C,KAAM,SACNoC,IAAK,mBACLS,IAAK,YAEL7C,KAAM,QACNoC,IAAK,iBACLS,IAAK,YAEL7C,KAAM,OACNoC,IAAK,iBACLS,IAAK,YAEL7C,KAAM,SACNoC,IAAK,mBACLS,IAAK,YAEL7C,KAAM,SACNoC,IAAK,mBACLS,IAAK,YAEL7C,KAAM,OACNoC,IAAK,mBACLS,IAAK,YAEL7C,KAAM,QACNoC,IAAK,mBACLS,IAAK,YAEL7C,KAAM,SACNoC,IAAK,qBACLS,IAAK,YAEL7C,KAAM,OACNoC,IAAK,qBACLS,IAAK,YAEL7C,KAAM,QACNoC,IAAK,mBACLS,IAAK,YAEL7C,KAAM,OACNoC,IAAK,qBACLS,IAAK,YAEL7C,KAAM,QACNoC,IAAK,eACLS,IAAK,YAELC,EAAQ,CACZ,OAAO,YAEH,MADAA,KACOF,EAAOE,OAqCfnE,EAGXxC,EAAES,UAAUC,MAAM,WACd,GAAIkG,GAAO,GAAItF,EACfsF,GAAKrF,SACDiE,iBAAiB,GAErB,IAAIqB,KACAlD,GAAI,OACJE,KAAM,kBAENF,GAAI,OACJE,KAAM,kBAENF,GAAI,OACJE,KAAM,iBAEV+C,GAAK/E,KAAKO,KAAK,WACXM,EAAEC,QAAQkE,EAAQ,SAAShB,EAAOrB,GAC9BoC,EAAKhB,UAAUC,OAGvB7F,EAAE,aAAa8G,OAAO,WAClBhH,QAAQC,IAAIC,EAAEyB,MAAMsF,OACpBH,EAAKrF,SACDG,SAAU1B,EAAEyB,MAAMsF,UAG1B/G,EAAE,aAAa8G,OAAO,WAClBhH,QAAQC,IAAIC,EAAEyB,MAAMsF,OACpBH,EAAKrF,SACDI,SAAU3B,EAAEyB,MAAMsF,UAG1B/G,EAAE,qBAAqBmE,MAAM,WACrBnE,EAAE,iBAAiBsG,SAAS,yBAC5BtG,EAAE,iBAAiBgH,YAAY,uBAAwB,uBACvDhH,EAAEyB,MAAMuF,YAAY,aAAc,aAClChH,EAAEyB,MAAMwF,KAAK,KAAKD,YAAY,QAAS,UAEvChH,EAAE,iBAAiBgH,YAAY,sBAAuB,wBACtDhH,EAAEyB,MAAMuF,YAAY,YAAa,cACjChH,EAAEyB,MAAMwF,KAAK,KAAKD,YAAY,OAAQ","file":"mgis.babeled.min.js","sourcesContent":["$(document).ready(function(){\r\n    $('.ui.dropdown').dropdown();\r\n    \r\n})\r\n\r\nrequire([\r\n    \"esri/Map\",\r\n    \"esri/views/MapView\",\r\n    \"esri/views/SceneView\",\r\n    \"esri/layers/GraphicsLayer\",\r\n    \"esri/geometry/Polyline\",\r\n    \"esri/symbols/SimpleLineSymbol\",\r\n    \"esri/Graphic\",\r\n    \"esri/widgets/Popup\",\r\n    \"esri/PopupTemplate\",\r\n    \"dojo/domReady!\"\r\n], function(Map,\r\n    MapView,\r\n    SceneView,\r\n    GraphicsLayer,\r\n    Polyline,\r\n    SimpleLineSymbol,\r\n    Graphic,\r\n    Popup,\r\n    PopupTemplate) {\r\n    function MarianaGis() {\r\n        var myGis = {\r\n            baseType: 'oceans',\r\n            viewType: '3D',\r\n            viewContainer: 'viewDiv',\r\n            graphicsLayers: {},\r\n            graphics: {},\r\n            contents: {},\r\n            chunkIndex: {},\r\n            options: {},\r\n            highLightedGraphics: [],\r\n            initGis: initGis,\r\n            addNewGraphic: addNewGraphic,\r\n            getData: getData,\r\n            loadMoreGraphics: loadMoreGraphics,\r\n            addContentToList: addContentToList,\r\n            loadAllGraphics: loadAllGraphics,\r\n            initGraphics: initGraphics,\r\n            initLayer: initLayer,\r\n            highLightGraphic: highLightGraphic,\r\n            unHighLightAll: unHighLightAll\r\n        };\r\n\r\n        function initGis(options) {\r\n            //gather the option args\r\n            if (options) {\r\n                this.options = options;\r\n                this.baseType = options.baseType || this.baseType;\r\n                this.viewType = options.viewType || this.viewType;\r\n                this.viewContainer = options.viewContainer || this.viewContainer;\r\n            }\r\n            var view;\r\n            //set map\r\n            this.map = new Map({\r\n                basemap: this.baseType\r\n            });\r\n\r\n            //set view\r\n            if (this.viewType == '3D') {\r\n                view = new SceneView({\r\n                    container: this.viewContainer,\r\n                    map: this.map,\r\n                    scale: 6000000,\r\n                    center: [146, 16, 0],\r\n                    //camera: {\r\n                    //    position: [146, 16, 2183],\r\n                    //    tilt: 80\r\n                    //}\r\n                });\r\n            } else {\r\n                view = new MapView({\r\n                    container: this.viewContainer,\r\n                    map: this.map,\r\n                    zoom: 7,\r\n                    center: [146, 16]\r\n                });\r\n            }\r\n            view.then(function() {\r\n                view.on('click', function(evt) {\r\n                    if (evt.graphic) {\r\n                        myGis.highLightGraphic(evt.graphic);\r\n                    }\r\n                });\r\n            });\r\n            //if it's a re-init, restore the graphics\r\n            _.forEach(this.graphicsLayers, function(graphicsLayer, layerId) {\r\n                myGis.map.add(graphicsLayer);\r\n            })\r\n            this.view = view;\r\n        }\r\n\r\n        function addNewGraphic(layerId, data) {\r\n            var graphicsLayer = this.graphicsLayers[layerId];\r\n            var polyline = new Polyline(data.path);\r\n            if (myGis.viewType === '2D') polyline = new Polyline(_.slice(data.path, 0, 2));\r\n            var lineSymbol = new SimpleLineSymbol({\r\n                color: graphicsLayer.color, //RGB color values as an array\r\n                width: 3\r\n            });\r\n\r\n            var newContent = '<div>start: lat=' + data.path[0][0] + ' lon=' + data.path[0][1] + ' alt=' + data.path[0][2] + '</div>' +\r\n                '<div>end: lat=' + data.path[1][0] + ' lon=' + data.path[1][1] + ' alt=' + data.path[1][2] + '</div>' +\r\n                '<img class=\"prev-img\" src=' + data.img.substring(0, data.img.lastIndexOf('.')) + \"-min.jpg\" + ' alt=\"image preview\" data-raw=' + data.img + ' onclick=\"showImg(this)\" />' +\r\n                '<a href=' + data.img + ' download=' + data.img.substring(data.img.lastIndexOf('/')) + '><span class=\"glyphicon glyphicon-save\" />download</a>';\r\n            var polylineGraphic = new Graphic({\r\n                id: data.id,\r\n                layerId: layerId,\r\n                title: data.name,\r\n                geometry: polyline, //add the geometry created in step 4\r\n                symbol: lineSymbol, //add the symbol created in step 5\r\n                popupTemplate: new PopupTemplate({\r\n                    title: data.name,\r\n                    content: newContent\r\n                })\r\n            });\r\n            $('.list-body').append($('<div>').attr('class', 'list-item').append($('<h4>').attr('class', 'list-item-name').text(data.name).click(function() {\r\n                myGis.view.animateTo(polylineGraphic);\r\n                myGis.highLightGraphic(polylineGraphic);\r\n            })).append(newContent));\r\n            this.graphics[data.id] = polylineGraphic;\r\n            //Add the graphic to the GraphicsLayer\r\n            graphicsLayer.add(polylineGraphic); //graphicsLayer was created in step 2\r\n            //graphics.push(polylineGraphic);\r\n        };\r\n\r\n\r\n        function unHighLightAll() {\r\n            var highLightedGraphics = this.highLightedGraphics\r\n            _.forEach(highLightedGraphics, function(graphic, index) {\r\n                myGis.graphicsLayers[graphic.layerId].remove(graphic);\r\n                myGis.graphicsLayers[graphic.layerId].add(myGis.graphics[graphic.originId]);\r\n            })\r\n            this.highLightedGraphics = [];\r\n        }\r\n\r\n        function highLightGraphic(graphic) {\r\n            if (!graphic.originId) { //only highlighted graphics have attr'originId'\r\n                this.unHighLightAll();\r\n                var lineSymbol = new SimpleLineSymbol({\r\n                    color: [255, 0, 0],\r\n                    width: 5\r\n                });\r\n                var highLightedGraphic = new Graphic({\r\n                    id: graphic.id + '-H',\r\n                    originId: graphic.id,\r\n                    layerId: graphic.layerId,\r\n                    title: graphic.title,\r\n                    geometry: graphic.geometry, //add the geometry created in step 4\r\n                    symbol: lineSymbol, //add the symbol created in step 5\r\n                    popupTemplate: graphic.popupTemplate\r\n                });\r\n                this.graphicsLayers[graphic.layerId].remove(graphic);\r\n                this.graphicsLayers[graphic.layerId].add(highLightedGraphic);\r\n                this.highLightedGraphics.push(highLightedGraphic);\r\n                console.log('highLighted');\r\n            }\r\n        }\r\n\r\n        function getData(url, layerId) {\r\n            $('#loader-holder').show();\r\n            return $.get(url).then(function(datas) {\r\n                $('#loader-holder').hide();\r\n                _.forEach(datas, function(data, index) {\r\n                    myGis.addNewGraphic(layerId, data);\r\n                });\r\n                console.log('datas.length---' + datas.length);\r\n                return datas.length > 0;\r\n            })\r\n        }\r\n\r\n        function loadMoreGraphics(layerId) {\r\n            return function() {\r\n                var url = '/map/graphics?layerId=' + layerId + '&chunkIndex=' + this.chunkIndex[layerId];\r\n                this.chunkIndex[layerId]++;\r\n                return this.getData(url, layerId); //returns false if nothing more\r\n            }\r\n        }\r\n\r\n        function addContentToList(contents) {\r\n            _.forEach(contents, function(content, index) {\r\n                $('.list-body').append($('<div>').attr('class', 'list-item').append($('<h4>').attr('class', 'list-item-name').text(data.name).click(function() {\r\n                    myGis.view.animateTo(polylineGraphic);\r\n                })).append(newContent));\r\n            });\r\n        }\r\n\r\n        function loadAllGraphics(layerId) {\r\n            var url = '/map/graphics?layerId=' + layerId + '&chunkIndex=' + myGis.chunkIndex[layerId];\r\n\r\n            function loadMore() {\r\n                $('#loader-holder').show();\r\n                $.get(url, function(datas) {\r\n                    $('#loader-holder').hide();\r\n                    _.forEach(datas, function(data, index) {\r\n                        myGis.addNewGraphic(layerId, data);\r\n                    });\r\n                    console.log('datas.length---' + datas.length);\r\n                    if (datas.length > 0) {\r\n                        myGis.chunkIndex[layerId]++;\r\n                        url = '/map/graphics?layerId=' + layerId + '&chunkIndex=' + myGis.chunkIndex[layerId];\r\n                        loadMore();\r\n                    }\r\n                })\r\n            };\r\n            loadMore();\r\n        }\r\n\r\n        function initGraphics(layerId) {\r\n            var initUrl = '/map/graphics?layerId=' + layerId + '&chunkIndex=0';\r\n            this.getData(initUrl, layerId);\r\n            this.chunkIndex[layerId] = 1;\r\n            if (!(this.options.loadAllGraphics === false)) {\r\n                console.log('start loading allllll');\r\n                this.loadAllGraphics(layerId);\r\n            }\r\n        }\r\n        myGis.getNextColor = function() {\r\n            var colors = [{\r\n                name: 'red',\r\n                rgb: 'rgb(255, 0, 0)',\r\n                hex: '#FF0000'\r\n            }, {\r\n                name: 'orange',\r\n                rgb: 'rgb(255, 165, 0)',\r\n                hex: '#FFA500'\r\n            },  {\r\n                name: 'green',\r\n                rgb: 'rgb(0, 128, 0)',\r\n                hex: '#008000'\r\n            },{\r\n                name: 'blue',\r\n                rgb: 'rgb(0, 0, 255)',\r\n                hex: '#0000FF'\r\n            }, {\r\n                name: 'purple',\r\n                rgb: 'rgb(128, 0, 128)',\r\n                hex: '#800080'\r\n            }, {\r\n                name: 'yellow',\r\n                rgb: 'rgb(255, 255, 0)',\r\n                hex: '#FFFF00'\r\n            },  {\r\n                name: 'teal',\r\n                rgb: 'rgb(0, 128, 128)',\r\n                hex: '#008080'\r\n            }, {\r\n                name: 'olive',\r\n                rgb: 'rgb(128, 128, 0)',\r\n                hex: '#808000'\r\n            },{\r\n                name: 'violet',\r\n                rgb: 'rgb(238, 130, 238)',\r\n                hex: '#EE82EE'\r\n            }, {\r\n                name: 'pink',\r\n                rgb: 'rgb(255, 192, 203)',\r\n                hex: '#FFC0CB'\r\n            }, {\r\n                name: 'brown',\r\n                rgb: 'rgb(165, 42, 42)',\r\n                hex: '#A52A2A'\r\n            }, {\r\n                name: 'gray',\r\n                rgb: 'rgb(128, 128, 128)',\r\n                hex: '#808080'\r\n            }, {\r\n                name: 'black',\r\n                rgb: 'rgb(0, 0, 0)',\r\n                hex: '#000000'\r\n            }];\r\n            var nextI = 0;\r\n            return function() {\r\n                nextI++;\r\n                return colors[nextI];\r\n            }\r\n        }();\r\n\r\n        function initLayer(layer) {\r\n            var newLayer = new GraphicsLayer(layer);\r\n            var newColor = this.getNextColor();\r\n            newLayer.color = newColor.rgb;\r\n            var newBtn = $('<button>').attr({\r\n                'class': 'layer-btn ui button basic ' + newColor.name,\r\n                'data-layerid': layer.id,\r\n                'data-color': newColor.name\r\n            }).text(layer.id); //.css('background-color', newColor.rgb);\r\n            newBtn.click(function() {\r\n                var btn = $(this);\r\n                if (btn.hasClass(btn.data('color'))) {\r\n                    myGis.map.remove(myGis.graphicsLayers[btn.data('layerid')]);\r\n                    btn.removeClass(btn.data('color'));\r\n                        /*btn.css({\r\n                            'background-color': 'white',\r\n                            'color': 'black'\r\n                        });*/\r\n                } else {\r\n                    myGis.map.add(myGis.graphicsLayers[btn.data('layerid')]);\r\n                    btn.addClass(btn.data('color'));\r\n                    /* btn.css({\r\n                         'background-color': btn.data('color'),\r\n                         'color': 'white'\r\n                     });*/\r\n                }\r\n            });\r\n            $('#select-layers').append(newBtn);\r\n            this.graphicsLayers[layer.id] = newLayer;\r\n            this.map.add(newLayer);\r\n            console.log('Layer--' + layer.id + ' initiated!');\r\n            this.initGraphics(layer.id);\r\n        }\r\n        return myGis;\r\n    };\r\n\r\n    $(document).ready(function() {\r\n        var mGis = new MarianaGis();\r\n        mGis.initGis({\r\n            loadAllGraphics: false\r\n        });\r\n        var layers = [{\r\n            id: 'L000',\r\n            name: 'random-layer0'\r\n        }, {\r\n            id: 'L002',\r\n            name: 'random-layer2'\r\n        }, {\r\n            id: 'L001',\r\n            name: 'random-layer1'\r\n        }];\r\n        mGis.view.then(function() {\r\n            _.forEach(layers, function(layer, index) {\r\n                mGis.initLayer(layer);\r\n            })\r\n        })\r\n        $('.changeBT').change(function() {\r\n            console.log($(this).val());\r\n            mGis.initGis({\r\n                baseType: $(this).val()\r\n            });\r\n        })\r\n        $('.changeVT').change(function() {\r\n            console.log($(this).val());\r\n            mGis.initGis({\r\n                viewType: $(this).val()\r\n            });\r\n        })\r\n        $('.view-control-btn').click(function() {\r\n            if ($('.view-control').hasClass('control-panel-hidden')) {\r\n                $('.view-control').switchClass('control-panel-hidden', 'control-panel-shown');\r\n                $(this).switchClass('btn-hidden', 'btn-shown');\r\n                $(this).find('i').switchClass('right', 'left');\r\n            } else {\r\n                $('.view-control').switchClass('control-panel-shown', 'control-panel-hidden');\r\n                $(this).switchClass('btn-shown', 'btn-hidden');\r\n                $(this).find('i').switchClass('left', 'right');\r\n            }\r\n        })\r\n    })\r\n});\r\n\r\nfunction showImg(ele) {\r\n    console.log($(ele).data('raw'));\r\n    var src = $(ele).data('raw');\r\n    var img;\r\n    if ($('img [src=\"' + src + '\"]')[0]) {\r\n        img = $('img [src=\"' + src + '\"]')[0]\r\n    } else {\r\n        img = $('<img>').attr({\r\n            'src': src,\r\n            'class': 'full-img'\r\n        })\r\n        $('#gismap').append(img);\r\n        Intense(img);\r\n    }\r\n    img.trigger('click');\r\n}\r\n"],"sourceRoot":"/source/"}